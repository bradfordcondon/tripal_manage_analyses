<?php

/**
 *  Install module
 */
function tripal_manage_analyses_install() {
  migrate_unigene();
}

function migrate_unigene() {

  //create Transcriptome and Genome bundles

  // Create the 'Transcriptome' entity type
  $error = '';

  $analysis_type_cvterm_id = 1;
  
  $args_array = [
    [
      'vocabulary' => 'operation',
      'accession' => '3258',
      'term_name' => 'Transcriptome assembly',
      'storage_args' => [
        'data_table' => 'analysis',
        'type_linker_table' => 'analysisprop',
        'type_value' => 'tripal_analysis_unigene',
        'type_column' => 'type_id',
        'type_id' => $analysis_type_cvterm_id,
      ],
    ],
    ['vocabulary' => 'operation',
      'accession' => '0525',
      'term_name' => 'Genome assembly',
      'storage_args' => [
        'data_table' => 'analysis',
        'type_value' => 'genome',
        'type_id' => $analysis_type_cvterm_id,

      ],

    ],
  ];

  foreach ($args_array as $args) {
    $term = tripal_load_term_entity([
      'vocabulary' => 'data',
      'accession' => '1274',
    ]);
    if ($term) {
      $bundle = tripal_load_bundle_entity(['term_id' => $term->id]);
    }
    if (!$term or !$bundle) {
      if (!tripal_create_bundle($args, $error)) {
        throw new Exception($error['!message']);
      }
    }
  }


  //look up cvterm for analysis_type

  $identifier = [
    'cv_id' => ['name' => 'tripal'],
    'name' => 'analysis_type',
  ];

  $cvterm = tripal_get_cvterm($identifier);

  //Get record ID's for all analyses that will be unigene analyses
  $sql = "SELECT A.analysis_id FROM {analysis} A
        INNER JOIN {analysisprop} AP  ON A.analysis_id = AP.analysis_id
        INNER JOIN {cvterm} CVT ON AP.type_id = CVT.cvterm_id
        WHERE CVT.name = :cvterm_name ";


}